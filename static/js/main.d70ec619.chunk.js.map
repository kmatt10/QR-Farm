{"version":3,"sources":["components/QRcard.js","components/Form.js","App.js","index.js"],"names":["QRcard","props","id","className","src","url","alt","name","href","target","rel","onClick","delete","Form","type","placeholder","value","linkName","onChange","linkNameChange","linkUrl","linkUrlChange","addLink","App","useState","links","linkList","setLinkList","setLinkName","setLinkUrl","listModified","setModified","deleteLink","filteredLinks","filter","link","linkFarm","map","useEffect","localStorage","setItem","JSON","stringify","data-toggle","role","aria-expanded","aria-controls","e","preventDefault","trim","newLink","nanoid","LINK_LIST","parse","getItem","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d70ec619.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction QRcard(props){\r\n    return(\r\n        <div id={`${props.id}`} className=\"card border-secondary QR-box\">\r\n          <img className=\"card-img-top\" src={`https://qrtag.net/api/qr_transparent_6.svg?url=${props.url}`} alt=\"qrtag\"/>\r\n          <div className=\"card-body\">\r\n            <h5 className=\"card-title text-center\">{props.name}</h5>\r\n            <a href={props.url} target=\"_blank\" rel=\"noreferrer\" className=\"btn btn-secondary btn-block\">Open</a>\r\n            <button className=\"btn btn-danger btn-block\" onClick={() => props.delete(props.id)}>Delete</button>\r\n          </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default QRcard;","import React from \"react\";\r\n\r\nfunction Form(props) {\r\n    return(\r\n        <form className=\"form-inline d-flex justify-content-center\">\r\n            <input type=\"text\" className=\"form-control\" id=\"newLinkName\" placeholder=\"Name\" value={props.linkName} onChange={props.linkNameChange}/>\r\n            <input type=\"text\" className=\"form-control\" id=\"newLinkURL\" placeholder=\"URL\" value={props.linkUrl} onChange={props.linkUrlChange}/>\r\n            <button type=\"submit\" className=\"btn btn-primary\" onClick={props.addLink}>Add</button>\r\n      </form>\r\n    );\r\n}\r\n\r\nexport default Form;","import React, { useState, useEffect } from \"react\";\nimport './App.css';\nimport QRcard from \"./components/QRcard\";\nimport Form from \"./components/Form\";\nimport { nanoid } from 'nanoid';\n\nfunction App(props) {\n  const [linkList, setLinkList] = useState(props.links);\n  const [linkName, setLinkName] = useState(\"\");\n  const [linkUrl, setLinkUrl] = useState(\"\");\n  const [listModified, setModified] = useState(false);\n\n  function addLink(e) {\n    e.preventDefault();\n    if(linkName.trim()!==\"\" && linkUrl.trim()!== \"\"){\n      const newLink = {\n        \"name\": linkName,\n        \"url\": linkUrl,\n        \"id\": `QR-${nanoid()}`\n      };\n\n      setLinkList([...linkList,newLink]);\n      setModified(true);\n    }\n    setLinkName(\"\");\n    setLinkUrl(\"\");\n  }\n\n  function deleteLink(id){\n    const filteredLinks = linkList.filter(link => id !== link.id);\n    setLinkList(filteredLinks);\n    setModified(true);\n  }\n\n  function linkNameChange(e){\n    setLinkName(e.target.value);\n  }\n\n  function linkUrlChange(e){\n    setLinkUrl(e.target.value);\n  }\n\n  const linkFarm = linkList.map(link => (\n    <QRcard\n      id={`${link.id}`}\n      name={link.name}\n      url={link.url}\n      delete={deleteLink}\n      key={`${link.id}`}\n    />\n  ));\n\n  useEffect(() => {\n    if(listModified){\n      localStorage.setItem('linkList',JSON.stringify(linkList))\n      setModified(false);\n    }\n  },[listModified,linkList])\n  return (\n    \n  <div className=\"App\">\n    <div className=\"jumbotron text-center\">\n      <h1>QR Farm</h1>\n      <p className=\"lead\">Add some links</p>\n      <p>created using <a href=\"https://qrtag.net\">QRtag API</a></p>\n      <p>\n        <a className=\"btn-sm btn-outline-info\" data-toggle=\"collapse\" href=\"#collapseMessage\" role=\"button\" aria-expanded=\"false\" aria-controls=\"collapseExample\">\n          Privacy Info\n        </a>\n        <div className=\"collapse\" id=\"collapseMessage\">\n          <div>\n            <p>Local storage is only used for storing link information. Nothing is stored on the server but of course always use care with what information you decide to use with the app! </p>\n          </div>\n        </div>\n      </p>\n\n      <Form \n        linkName={linkName}\n        linkNameChange={linkNameChange}\n        linkUrl={linkUrl}\n        linkUrlChange={linkUrlChange}\n        addLink={addLink}\n      />\n    </div>\n\n    <div className=\"QRlist container-fluid\">\n      <div className=\"d-flex justify-content-around flex-wrap\">\n        {linkFarm}\n      </div>\n    </div>\n  </div>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nconst LINK_LIST = JSON.parse(localStorage.getItem('linkList')) || [\n  { \"name\": \"Google\",\n    \"url\": \"https://www.google.com\",\n    \"id\": \"QR-0\"\n  },\n  { \"name\": \"Github\",\n    \"url\": \"https://www.github.com\",\n    \"id\": \"QR-1\"\n  },\n  { \"name\": \"QR Tag\",\n    \"url\": \"https://www.qrtag.net/api\",\n    \"id\": \"QR-2\"\n  }\n];\n\nReactDOM.render(<App links={LINK_LIST}/>,document.getElementById('root'));"],"sourceRoot":""}